# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-08 16:53
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import monitor.models
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_url', models.URLField()),
                ('destination_url', models.URLField()),
                ('time_first', models.DateTimeField(auto_now_add=True)),
                ('time_last', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Log entries',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('max_requests', models.PositiveIntegerField()),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SiteToSkip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=253, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Sites to skip',
            },
        ),
        migrations.CreateModel(
            name='URLCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('last_checked', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPrefs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_zone', timezone_field.fields.TimeZoneField(default=b'America/Los_Angeles', help_text=b'What time zone should logs display in?')),
                ('email_404', models.BooleanField(default=True, help_text=b'Do you want to be notified of new 404 errors?')),
                ('email_quota', models.BooleanField(default=True, help_text=b'\n        Do you want to be notified if one of your sites goes over its daily \n        request quota?')),
                ('customer', models.CharField(blank=True, max_length=32)),
                ('plan', models.ForeignKey(default=monitor.models.basic_plan, on_delete=django.db.models.deletion.CASCADE, to='monitor.Plan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User prefs',
            },
        ),
        migrations.CreateModel(
            name='UserSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(help_text=b'\n        Full domain name, <strong>including</strong> subdomain (if any), and \n        <strong>excluding</strong> a leading "http://", etc.<br/><br/>Examples: \n        example.com, news.ycombinator.com, www.reddit.com', max_length=253)),
                ('slug', models.SlugField(max_length=253)),
                ('requests_today', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='logentry',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.UserSite'),
        ),
    ]
